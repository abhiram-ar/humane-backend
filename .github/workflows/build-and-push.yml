name: Build & Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  detect-changes:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changed.outputs.services }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Changed Services
        id: changed
        run: |
          changed_dirs=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
            grep -E '^(chat-service|email-service|feed-service|writer-service|user-service|reward-service|notification-service|moderation-service|elasticsearch-proxy)/' | \
            cut -d'/' -f1 | sort -u)
          echo "services=$changed_dirs" >> $GITHUB_OUTPUT

  build-and-push:
    name: Build & Push
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.services != ''
    strategy:
      matrix:
        service: ${{ fromJSON(format('["{}"]', join(needs.detect-changes.outputs.services, '","'))) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run TypeScript Check
        run: |
          cd ${{ matrix.service }}
          npm ci
          npx tsc --noEmit

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}
          DOCKER_TAG=${{ github.sha }}
          cd ${{ matrix.service }}
          docker build -t $IMAGE_NAME:$DOCKER_TAG -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$DOCKER_TAG
          docker push $IMAGE_NAME:latest
